--- a/drivers/net/wireless/ath/ath9k/hw.c	2019-10-08 06:27:22.479855000 +0800
+++ b/drivers/net/wireless/ath/ath9k/hw.c	2019-10-08 06:31:26.372789242 +0800
@@ -1891,19 +1891,19 @@
 	return -EINVAL;
 }
 
-u32 ath9k_hw_get_tsf_offset(struct timespec64 *last, struct timespec64 *cur)
+u32 ath9k_hw_get_tsf_offset(struct timespec *last, struct timespec *cur)
 {
-	struct timespec64 ts;
+	struct timespec ts;
 	s64 usec;
 
 	if (!cur) {
-		ktime_get_raw_ts64(&ts);
+		getrawmonotonic(&ts);
 		cur = &ts;
 	}
 
 	usec = cur->tv_sec * 1000000ULL + cur->tv_nsec / 1000;
 	usec -= last->tv_sec * 1000000ULL + last->tv_nsec / 1000;
 
 	return (u32) usec;
 }
 EXPORT_SYMBOL(ath9k_hw_get_tsf_offset);
@@ -1975,7 +1975,7 @@
 	macStaId1 = REG_READ(ah, AR_STA_ID1) & AR_STA_ID1_BASE_RATE_11B;
 
 	/* Save TSF before chip reset, a cold reset clears it */
-	ktime_get_raw_ts64(&tsf_ts);
+	getrawmonotonic(&tsf_ts);
 	tsf = ath9k_hw_gettsf64(ah);
 
 	saveLedState = REG_READ(ah, AR_CFG_LED) &
--- a/drivers/net/wireless/ath/ath9k/main.c	2019-10-07 22:22:06.535320000 +0800
+++ b/drivers/net/wireless/ath/ath9k/main.c	2018-09-26 04:12:56.000000000 +0800
@@ -1879,7 +1879,7 @@
 	mutex_lock(&sc->mutex);
 	ath9k_ps_wakeup(sc);
 	tsf -= le64_to_cpu(avp->tsf_adjust);
-	ktime_get_raw_ts64(&avp->chanctx->tsf_ts);
+	getrawmonotonic(&avp->chanctx->tsf_ts);
 	if (sc->cur_chan == avp->chanctx)
 		ath9k_hw_settsf64(sc->sc_ah, tsf);
 	avp->chanctx->tsf_val = tsf;
@@ -1895,7 +1895,7 @@
 	mutex_lock(&sc->mutex);
 
 	ath9k_ps_wakeup(sc);
-	ktime_get_raw_ts64(&avp->chanctx->tsf_ts);
+	getrawmonotonic(&avp->chanctx->tsf_ts);
 	if (sc->cur_chan == avp->chanctx)
 		ath9k_hw_reset_tsf(sc->sc_ah);
 	avp->chanctx->tsf_val = 0;
