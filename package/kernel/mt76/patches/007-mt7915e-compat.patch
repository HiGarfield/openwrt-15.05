--- a/mt7915/init.c
+++ b/mt7915/init.c
@@ -419,12 +419,12 @@
 			IEEE80211_HE_MAC_CAP0_HTC_HE;
 		he_cap_elem->mac_cap_info[1] =
 			IEEE80211_HE_MAC_CAP1_TF_MAC_PAD_DUR_0US |
-			IEEE80211_HE_MAC_CAP1_MULTI_TID_AGG_RX_QOS_1;
+			IEEE80211_HE_MAC_CAP1_MULTI_TID_AGG_QOS_1;
 		he_cap_elem->mac_cap_info[2] =
 			IEEE80211_HE_MAC_CAP2_BSR;
 		he_cap_elem->mac_cap_info[3] =
 			IEEE80211_HE_MAC_CAP3_OMI_CONTROL |
-			IEEE80211_HE_MAC_CAP3_MAX_AMPDU_LEN_EXP_RESERVED;
+			IEEE80211_HE_MAC_CAP3_MAX_A_AMPDU_LEN_EXP_RESERVED;
 		he_cap_elem->mac_cap_info[4] =
 			IEEE80211_HE_MAC_CAP4_AMDSU_IN_AMPDU;
 
--- a/mt7915/main.c
+++ b/mt7915/main.c
@@ -611,7 +611,7 @@
 	case IEEE80211_AMPDU_TX_START:
 		mtxq->agg_ssn = IEEE80211_SN_TO_SEQ(ssn);
 		mt7915_set_aggr_state(msta, tid, MT7915_AGGR_START);
-		ret = IEEE80211_AMPDU_TX_START_IMMEDIATE;
+		ieee80211_start_tx_ba_cb_irqsafe(vif, sta->addr, tid);;
 		break;
 	case IEEE80211_AMPDU_TX_STOP_CONT:
 		mtxq->aggr = false;
--- a/mt7915/mcu.c
+++ b/mt7915/mcu.c
@@ -367,10 +367,6 @@
 
 	mutex_lock(&mdev->mcu.mutex);
 
-	ret = __mt7915_mcu_msg_send(dev, skb, cmd, &seq);
-	if (ret)
-		goto out;
-
 	if (wait_resp)
 		ret = mt7915_mcu_wait_response(dev, cmd, seq);
 
@@ -1396,7 +1392,7 @@
 	he->t_frame_dur =
 		HE_MAC(CAP1_TF_MAC_PAD_DUR_MASK, elem->mac_cap_info[1]);
 	he->max_ampdu_exp =
-		HE_MAC(CAP3_MAX_AMPDU_LEN_EXP_MASK, elem->mac_cap_info[3]);
+		HE_MAC(CAP3_MAX_A_AMPDU_LEN_EXP_MASK, elem->mac_cap_info[3]);
 
 	he->bw_set =
 		HE_PHY(CAP0_CHANNEL_WIDTH_SET_MASK, elem->phy_cap_info[0]);
--- a/mt7915/mac.c
+++ b/mt7915/mac.c
@@ -802,7 +802,6 @@
 		struct mt7915_sta *msta;
 
 		msta = (struct mt7915_sta *)sta->drv_priv;
-		status.rate = &msta->stats.tx_rate;
 	}
 
 	/* use status_ext to report HE rate */
