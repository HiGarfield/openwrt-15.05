--- a/feeds/luci/modules/luci-base/po/zh-cn/base.po
+++ b/feeds/luci/modules/luci-base/po/zh-cn/base.po
@@ -3183,6 +3183,33 @@
 msgid "xDSL"
 msgstr "xDSL"
 
+msgid "Enables The 802.11k standard provides information to discover the best available access point"
+msgstr "启用 802.11k 自动寻找发现最佳可用接入点的信息"
+
+msgid "Enable neighbor report via radio measurements"
+msgstr "启用无线电测量邻居报告"
+
+msgid "Enable beacon report via radio measurements"
+msgstr "启用无线电测量信标报告"
+
+msgid "Enables 802.11v allows client devices to exchange information about the network topology,tating overall improvement of the wireless network."
+msgstr "启用 802.11v 将允许客户端设备交换有关网络拓扑的信息，从而全面改善无线网络漫游"
+
+msgid "extended sleep mode for stations"
+msgstr 扩展无线休眠节能模式"
+
+msgid "BSS Transition Management"
+msgstr "BSS 传输管理"
+
+msgid "Time advertisement"
+msgstr "广播同步时间"
+
+msgid "time zone"
+msgstr "时区"
+
+msgid "Local time zone as specified in 8.3 of IEEE Std 1003.1-2004"
+msgstr "本地时区采用 IEEE Std 1003.1-2004 的 8.3 格式（例如 UTC8）"
+
 msgid "xDSL Status"
 msgstr "xDSL状态"
 
--- a/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_network/wifi.lua
+++ b/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_network/wifi.lua
@@ -795,6 +795,69 @@
 
 if hwtype == "mac80211" or hwtype == "prism2" then
 
+	-- Probe 802.11k support
+	ieee80211k = s:taboption("encryption", Flag, "ieee80211k", translate("802.11k"), translate("Enables The 802.11k standard provides information to discover the best available access point"))
+	ieee80211k:depends({mode="ap", encryption="wpa"})
+	ieee80211k:depends({mode="ap", encryption="wpa2"})
+	ieee80211k:depends({mode="ap-wds", encryption="wpa"})
+	ieee80211k:depends({mode="ap-wds", encryption="wpa2"})
+	ieee80211k:depends({mode="ap", encryption="psk"})
+	ieee80211k:depends({mode="ap", encryption="psk2"})
+	ieee80211k:depends({mode="ap", encryption="psk-mixed"})
+	ieee80211k:depends({mode="ap-wds", encryption="psk"})
+	ieee80211k:depends({mode="ap-wds", encryption="psk2"})
+	ieee80211k:depends({mode="ap-wds", encryption="psk-mixed"})
+	ieee80211k.rmempty = true
+
+	rrmneighborreport = s:taboption("encryption", Flag, "rrm_neighbor_report", translate("Enable neighbor report via radio measurements"))
+	rrmneighborreport.default = rrmneighborreport.enabled
+	rrmneighborreport:depends({ieee80211k="1"})
+	rrmneighborreport.rmempty = true
+
+	rrmbeaconreport = s:taboption("encryption", Flag, "rrm_beacon_report", translate("Enable beacon report via radio measurements"))
+	rrmbeaconreport.default = rrmbeaconreport.enabled
+	rrmbeaconreport:depends({ieee80211k="1"})
+	rrmbeaconreport.rmempty = true
+	-- End of 802.11k options
+
+	-- Probe 802.11v support
+	ieee80211v = s:taboption("encryption", Flag, "ieee80211v", translate("802.11v"), translate("Enables 802.11v allows client devices to exchange information about the network topology,tating overall improvement of the wireless network."))
+	ieee80211v:depends({mode="ap", encryption="wpa"})
+	ieee80211v:depends({mode="ap", encryption="wpa2"})
+	ieee80211v:depends({mode="ap-wds", encryption="wpa"})
+	ieee80211v:depends({mode="ap-wds", encryption="wpa2"})
+	ieee80211v:depends({mode="ap", encryption="psk"})
+	ieee80211v:depends({mode="ap", encryption="psk2"})
+	ieee80211v:depends({mode="ap", encryption="psk-mixed"})
+	ieee80211v:depends({mode="ap-wds", encryption="psk"})
+	ieee80211v:depends({mode="ap-wds", encryption="psk2"})
+	ieee80211v:depends({mode="ap-wds", encryption="psk-mixed"})
+	ieee80211v.rmempty = true
+
+
+	wnmsleepmode = s:taboption("encryption", Flag, "wnm_sleep_mode", translate("extended sleep mode for stations"))
+	wnmsleepmode.default = wnmsleepmode.disabled
+	wnmsleepmode:depends({ieee80211v="1"})
+	wnmsleepmode.rmempty = true
+
+	bsstransition = s:taboption("encryption", Flag, "bss_transition", translate("BSS Transition Management"))
+	bsstransition.default = bsstransition.disabled
+	bsstransition:depends({ieee80211v="1"})
+	bsstransition.rmempty = true
+
+	timeadvertisement = s:taboption("encryption", ListValue, "time_advertisement", translate("Time advertisement"))
+	timeadvertisement:depends({ieee80211v="1"})
+	timeadvertisement:value("0", translatef("disabled"))
+	timeadvertisement:value("2", translatef("UTC time at which the TSF timer is 0"))
+	timeadvertisement.rmempty = true
+
+	time_zone = s:taboption("encryption", Value, "time_zone",
+	translate("time zone"), translate("Local time zone as specified in 8.3 of IEEE Std 1003.1-2004"))
+	time_zone:depends({time_advertisement="2"})
+	time_zone.placeholder = "UTC8"
+	time_zone.rmempty = true
+	-- End of 802.11v options
+
 	-- Probe 802.11r support (and EAP support as a proxy for Openwrt)
 	local has_80211r = (os.execute("hostapd -v11r 2>/dev/null || hostapd -veap 2>/dev/null") == 0)
 
